{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/utko/Documents/Documents%20-%20MacBook%20Air%20de%20Guiliherme/rh-matilha/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/utko/Documents/Documents%20-%20MacBook%20Air%20de%20Guiliherme/rh-matilha/src/app/api/dashboard/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\n\n// GET - Estatísticas do dashboard\nexport async function GET(request: NextRequest) {\n  try {\n    // Buscar estatísticas em paralelo para melhor performance\n    const [\n      totalColaboradores,\n      colaboradoresAtivos,\n      colaboradoresInativos,\n      feriasPendentes,\n      feriasAprovadas,\n      feriasReprovadas,\n      totalFerias,\n      documentosVencidos,\n      documentosProximosVencimento,\n      documentosValidos,\n      totalDocumentos,\n      novosCadastros\n    ] = await Promise.all([\n      // Total de colaboradores\n      prisma.colaborador.count(),\n      \n      // Colaboradores ativos\n      prisma.colaborador.count({\n        where: { status: 'ativo' }\n      }),\n      \n      // Colaboradores inativos\n      prisma.colaborador.count({\n        where: { status: 'inativo' }\n      }),\n      \n      // Férias pendentes\n      prisma.ferias.count({\n        where: { status: 'pendente' }\n      }),\n\n      // Férias aprovadas\n      prisma.ferias.count({\n        where: { status: 'aprovado' }\n      }),\n\n      // Férias reprovadas\n      prisma.ferias.count({\n        where: { status: 'reprovado' }\n      }),\n\n      // Total de férias\n      prisma.ferias.count(),\n      \n      // Documentos vencidos\n      prisma.documento.count({\n        where: {\n          dataVencimento: {\n            lt: new Date()\n          },\n          status: 'valido'\n        }\n      }),\n      \n      // Documentos próximos do vencimento (próximos 30 dias)\n      prisma.documento.count({\n        where: {\n          dataVencimento: {\n            gte: new Date(),\n            lte: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)\n          },\n          status: 'valido'\n        }\n      }),\n\n      // Documentos válidos\n      prisma.documento.count({\n        where: { status: 'valido' }\n      }),\n\n      // Total de documentos\n      prisma.documento.count(),\n      \n      // Novos cadastros (últimos 30 dias)\n      prisma.colaborador.count({\n        where: {\n          createdAt: {\n            gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\n          }\n        }\n      })\n    ])\n\n    // Atividades recentes\n    const atividadesRecentes = await prisma.colaborador.findMany({\n      take: 5,\n      orderBy: { updatedAt: 'desc' },\n      select: {\n        id: true,\n        nome: true,\n        updatedAt: true\n      }\n    })\n\n    // Colaboradores recentes para a página de colaboradores\n    const colaboradoresRecentes = await prisma.colaborador.findMany({\n      take: 5,\n      orderBy: { createdAt: 'desc' },\n      select: {\n        id: true,\n        nome: true,\n        cpf: true,\n        email: true,\n        cargo: true,\n        departamento: true,\n        dataAdmissao: true,\n        status: true,\n        createdAt: true\n      }\n    })\n\n    // Férias recentes\n    const feriasRecentes = await prisma.ferias.findMany({\n      take: 5,\n      orderBy: { createdAt: 'desc' },\n      include: {\n        colaborador: {\n          select: {\n            id: true,\n            nome: true,\n            cargo: true,\n            departamento: true\n          }\n        }\n      }\n    })\n\n    // Documentos recentes\n    const documentosRecentes = await prisma.documento.findMany({\n      take: 5,\n      orderBy: { createdAt: 'desc' },\n      include: {\n        colaborador: {\n          select: {\n            id: true,\n            nome: true,\n            cargo: true,\n            departamento: true\n          }\n        }\n      }\n    })\n\n    return NextResponse.json({\n      estatisticas: {\n        totalColaboradores,\n        colaboradoresAtivos,\n        colaboradoresInativos,\n        feriasPendentes,\n        feriasAprovadas,\n        feriasReprovadas,\n        totalFerias,\n        documentosVencidos,\n        documentosProximosVencimento,\n        documentosValidos,\n        totalDocumentos,\n        novosCadastros\n      },\n      atividadesRecentes,\n      colaboradoresRecentes,\n      feriasRecentes,\n      documentosRecentes\n    })\n  } catch (error) {\n    console.error('Erro ao buscar estatísticas do dashboard:', error)\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}