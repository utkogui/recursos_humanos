{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/utko/Documents/Documents%20-%20MacBook%20Air%20de%20Guiliherme/rh-matilha/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/utko/Documents/Documents%20-%20MacBook%20Air%20de%20Guiliherme/rh-matilha/src/app/api/colaboradores/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\n\n// GET - Listar todos os colaboradores\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const search = searchParams.get('search')\n    const status = searchParams.get('status')\n    const departamento = searchParams.get('departamento')\n    const page = parseInt(searchParams.get('page') || '1')\n    const limit = parseInt(searchParams.get('limit') || '10')\n    const skip = (page - 1) * limit\n\n    // Construir filtros\n    const where: any = {}\n    \n    if (search) {\n      where.OR = [\n        { nome: { contains: search, mode: 'insensitive' } },\n        { email: { contains: search, mode: 'insensitive' } },\n        { cargo: { contains: search, mode: 'insensitive' } },\n      ]\n    }\n    \n    if (status && status !== 'todos') {\n      where.status = status\n    }\n    \n    if (departamento && departamento !== 'todos') {\n      where.departamento = departamento\n    }\n\n    // Buscar colaboradores com paginação\n    const [colaboradores, total] = await Promise.all([\n      prisma.colaborador.findMany({\n        where,\n        skip,\n        take: limit,\n        orderBy: { nome: 'asc' },\n      }),\n      prisma.colaborador.count({ where })\n    ])\n\n    return NextResponse.json({\n      colaboradores,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit)\n      }\n    })\n  } catch (error) {\n    console.error('Erro ao buscar colaboradores:', error)\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    )\n  }\n}\n\n// POST - Criar novo colaborador\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n    \n    // Validar dados obrigatórios\n    const requiredFields = ['nome', 'cpf', 'email', 'telefone', 'cargo', 'departamento', 'dataAdmissao', 'tipoContrato', 'salario']\n    for (const field of requiredFields) {\n      if (!body[field]) {\n        return NextResponse.json(\n          { error: `Campo obrigatório: ${field}` },\n          { status: 400 }\n        )\n      }\n    }\n\n    // Verificar se CPF já existe\n    const existingColaborador = await prisma.colaborador.findUnique({\n      where: { cpf: body.cpf }\n    })\n\n    if (existingColaborador) {\n      return NextResponse.json(\n        { error: 'CPF já cadastrado' },\n        { status: 400 }\n      )\n    }\n\n    // Verificar se email já existe\n    const existingEmail = await prisma.colaborador.findUnique({\n      where: { email: body.email }\n    })\n\n    if (existingEmail) {\n      return NextResponse.json(\n        { error: 'E-mail já cadastrado' },\n        { status: 400 }\n      )\n    }\n\n    // Converter datas\n    const dataNascimento = new Date(body.dataNascimento)\n    const dataAdmissao = new Date(body.dataAdmissao)\n\n    // Criar colaborador\n    const colaborador = await prisma.colaborador.create({\n      data: {\n        ...body,\n        dataNascimento,\n        dataAdmissao,\n        salario: parseFloat(body.salario)\n      }\n    })\n\n    return NextResponse.json(colaborador, { status: 201 })\n  } catch (error) {\n    console.error('Erro ao criar colaborador:', error)\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}